/*
 * Waardering onroerende zaken
 * Deze API levert actuele gegevens over WOZ-objecten 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * De aanduiding van het WOZ-object zoals wordt weergegeven op de WOZ-beschikking
 */
@ApiModel(description = "De aanduiding van het WOZ-object zoals wordt weergegeven op de WOZ-beschikking")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-09T07:56:59.068811Z[Etc/UTC]")
public class ObjectAanduidingAllOf {
  public static final String SERIALIZED_NAME_LOCATIEOMSCHRIJVING = "locatieomschrijving";
  @SerializedName(SERIALIZED_NAME_LOCATIEOMSCHRIJVING)
  private String locatieomschrijving;

  public static final String SERIALIZED_NAME_NUMMERAANDUIDING_IDENTIFICATIE = "nummeraanduidingIdentificatie";
  @SerializedName(SERIALIZED_NAME_NUMMERAANDUIDING_IDENTIFICATIE)
  private String nummeraanduidingIdentificatie;


  public ObjectAanduidingAllOf locatieomschrijving(String locatieomschrijving) {
    
    this.locatieomschrijving = locatieomschrijving;
    return this;
  }

   /**
   * De aanvullende omschrijving van de ligging van een WOZ-object ten opzichte van de dichtstbijzijnde verblijfsobject, standplaats, ligplaats of openbare ruimte.
   * @return locatieomschrijving
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Naast de derde brug", value = "De aanvullende omschrijving van de ligging van een WOZ-object ten opzichte van de dichtstbijzijnde verblijfsobject, standplaats, ligplaats of openbare ruimte.")

  public String getLocatieomschrijving() {
    return locatieomschrijving;
  }


  public void setLocatieomschrijving(String locatieomschrijving) {
    this.locatieomschrijving = locatieomschrijving;
  }


  public ObjectAanduidingAllOf nummeraanduidingIdentificatie(String nummeraanduidingIdentificatie) {
    
    this.nummeraanduidingIdentificatie = nummeraanduidingIdentificatie;
    return this;
  }

   /**
   * Identificatie van de nummeraanduiding in de BAG waarmee het WOZ-object wordt aangeduid
   * @return nummeraanduidingIdentificatie
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0226200000038923", value = "Identificatie van de nummeraanduiding in de BAG waarmee het WOZ-object wordt aangeduid")

  public String getNummeraanduidingIdentificatie() {
    return nummeraanduidingIdentificatie;
  }


  public void setNummeraanduidingIdentificatie(String nummeraanduidingIdentificatie) {
    this.nummeraanduidingIdentificatie = nummeraanduidingIdentificatie;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectAanduidingAllOf objectAanduidingAllOf = (ObjectAanduidingAllOf) o;
    return Objects.equals(this.locatieomschrijving, objectAanduidingAllOf.locatieomschrijving) &&
        Objects.equals(this.nummeraanduidingIdentificatie, objectAanduidingAllOf.nummeraanduidingIdentificatie);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locatieomschrijving, nummeraanduidingIdentificatie);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectAanduidingAllOf {\n");
    sb.append("    locatieomschrijving: ").append(toIndentedString(locatieomschrijving)).append("\n");
    sb.append("    nummeraanduidingIdentificatie: ").append(toIndentedString(nummeraanduidingIdentificatie)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

