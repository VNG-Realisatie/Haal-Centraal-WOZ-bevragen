/*
 * Waardering onroerende zaken
 *
 * Deze API levert actuele gegevens over WOZ-objecten 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// KadastraalOnroerendeZaak
    /// </summary>
    [DataContract]
    public partial class KadastraalOnroerendeZaak :  IEquatable<KadastraalOnroerendeZaak>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KadastraalOnroerendeZaak" /> class.
        /// </summary>
        /// <param name="identificatie">identificatie.</param>
        /// <param name="aanduiding">aanduiding.</param>
        /// <param name="aanduidingMetGemeentenaam">De volledige kadastraleAanduiding waarbij alle delen zijn samengevoegd en waarbij de gemeentenaam is gebruikt..</param>
        public KadastraalOnroerendeZaak(string identificatie = default(string), KadastraleAanduiding aanduiding = default(KadastraleAanduiding), string aanduidingMetGemeentenaam = default(string))
        {
            this.Identificatie = identificatie;
            this.Aanduiding = aanduiding;
            this.AanduidingMetGemeentenaam = aanduidingMetGemeentenaam;
        }

        /// <summary>
        /// Gets or Sets Identificatie
        /// </summary>
        [DataMember(Name="identificatie", EmitDefaultValue=false)]
        public string Identificatie { get; set; }

        /// <summary>
        /// Gets or Sets Aanduiding
        /// </summary>
        [DataMember(Name="aanduiding", EmitDefaultValue=false)]
        public KadastraleAanduiding Aanduiding { get; set; }

        /// <summary>
        /// De volledige kadastraleAanduiding waarbij alle delen zijn samengevoegd en waarbij de gemeentenaam is gebruikt.
        /// </summary>
        /// <value>De volledige kadastraleAanduiding waarbij alle delen zijn samengevoegd en waarbij de gemeentenaam is gebruikt.</value>
        [DataMember(Name="aanduidingMetGemeentenaam", EmitDefaultValue=false)]
        public string AanduidingMetGemeentenaam { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class KadastraalOnroerendeZaak {\n");
            sb.Append("  Identificatie: ").Append(Identificatie).Append("\n");
            sb.Append("  Aanduiding: ").Append(Aanduiding).Append("\n");
            sb.Append("  AanduidingMetGemeentenaam: ").Append(AanduidingMetGemeentenaam).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as KadastraalOnroerendeZaak);
        }

        /// <summary>
        /// Returns true if KadastraalOnroerendeZaak instances are equal
        /// </summary>
        /// <param name="input">Instance of KadastraalOnroerendeZaak to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(KadastraalOnroerendeZaak input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Identificatie == input.Identificatie ||
                    (this.Identificatie != null &&
                    this.Identificatie.Equals(input.Identificatie))
                ) && 
                (
                    this.Aanduiding == input.Aanduiding ||
                    (this.Aanduiding != null &&
                    this.Aanduiding.Equals(input.Aanduiding))
                ) && 
                (
                    this.AanduidingMetGemeentenaam == input.AanduidingMetGemeentenaam ||
                    (this.AanduidingMetGemeentenaam != null &&
                    this.AanduidingMetGemeentenaam.Equals(input.AanduidingMetGemeentenaam))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Identificatie != null)
                    hashCode = hashCode * 59 + this.Identificatie.GetHashCode();
                if (this.Aanduiding != null)
                    hashCode = hashCode * 59 + this.Aanduiding.GetHashCode();
                if (this.AanduidingMetGemeentenaam != null)
                    hashCode = hashCode * 59 + this.AanduidingMetGemeentenaam.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
