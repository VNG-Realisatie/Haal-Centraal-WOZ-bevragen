/*
 * Waardering onroerende zaken
 *
 * Deze API levert actuele gegevens over WOZ-objecten 
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Waarde op de meest recente beschikking met betrekking tot de peildatum
    /// </summary>
    [DataContract(Name = "Waarde")]
    public partial class Waarde : IEquatable<Waarde>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Waarde" /> class.
        /// </summary>
        /// <param name="vastgesteldeWaarde">Waarde van het WOZ-object op de peildatum in Euro.</param>
        /// <param name="waardepeildatum">Datum waarvoor de vastgestelde waarde geldt.</param>
        /// <param name="ingangsdatum">Datum vanaf wanneer de vastgestelde waarde geldt.</param>
        /// <param name="beschikkingsStatussen">Een of meer actuele statussen van de vastgestelde waarde.</param>
        public Waarde(int vastgesteldeWaarde = default(int), DateTime waardepeildatum = default(DateTime), DateTime ingangsdatum = default(DateTime), List<StatusBeschikkingEnum> beschikkingsStatussen = default(List<StatusBeschikkingEnum>))
        {
            this.VastgesteldeWaarde = vastgesteldeWaarde;
            this.Waardepeildatum = waardepeildatum;
            this.Ingangsdatum = ingangsdatum;
            this.BeschikkingsStatussen = beschikkingsStatussen;
        }

        /// <summary>
        /// Waarde van het WOZ-object op de peildatum in Euro
        /// </summary>
        /// <value>Waarde van het WOZ-object op de peildatum in Euro</value>
        [DataMember(Name = "vastgesteldeWaarde", EmitDefaultValue = false)]
        public int VastgesteldeWaarde { get; set; }

        /// <summary>
        /// Datum waarvoor de vastgestelde waarde geldt
        /// </summary>
        /// <value>Datum waarvoor de vastgestelde waarde geldt</value>
        [DataMember(Name = "waardepeildatum", EmitDefaultValue = false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime Waardepeildatum { get; set; }

        /// <summary>
        /// Datum vanaf wanneer de vastgestelde waarde geldt
        /// </summary>
        /// <value>Datum vanaf wanneer de vastgestelde waarde geldt</value>
        [DataMember(Name = "ingangsdatum", EmitDefaultValue = false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime Ingangsdatum { get; set; }

        /// <summary>
        /// Een of meer actuele statussen van de vastgestelde waarde
        /// </summary>
        /// <value>Een of meer actuele statussen van de vastgestelde waarde</value>
        [DataMember(Name = "beschikkingsStatussen", EmitDefaultValue = false)]
        public List<StatusBeschikkingEnum> BeschikkingsStatussen { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Waarde {\n");
            sb.Append("  VastgesteldeWaarde: ").Append(VastgesteldeWaarde).Append("\n");
            sb.Append("  Waardepeildatum: ").Append(Waardepeildatum).Append("\n");
            sb.Append("  Ingangsdatum: ").Append(Ingangsdatum).Append("\n");
            sb.Append("  BeschikkingsStatussen: ").Append(BeschikkingsStatussen).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Waarde);
        }

        /// <summary>
        /// Returns true if Waarde instances are equal
        /// </summary>
        /// <param name="input">Instance of Waarde to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Waarde input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.VastgesteldeWaarde == input.VastgesteldeWaarde ||
                    this.VastgesteldeWaarde.Equals(input.VastgesteldeWaarde)
                ) && 
                (
                    this.Waardepeildatum == input.Waardepeildatum ||
                    (this.Waardepeildatum != null &&
                    this.Waardepeildatum.Equals(input.Waardepeildatum))
                ) && 
                (
                    this.Ingangsdatum == input.Ingangsdatum ||
                    (this.Ingangsdatum != null &&
                    this.Ingangsdatum.Equals(input.Ingangsdatum))
                ) && 
                (
                    this.BeschikkingsStatussen == input.BeschikkingsStatussen ||
                    this.BeschikkingsStatussen != null &&
                    input.BeschikkingsStatussen != null &&
                    this.BeschikkingsStatussen.SequenceEqual(input.BeschikkingsStatussen)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.VastgesteldeWaarde.GetHashCode();
                if (this.Waardepeildatum != null)
                    hashCode = hashCode * 59 + this.Waardepeildatum.GetHashCode();
                if (this.Ingangsdatum != null)
                    hashCode = hashCode * 59 + this.Ingangsdatum.GetHashCode();
                if (this.BeschikkingsStatussen != null)
                    hashCode = hashCode * 59 + this.BeschikkingsStatussen.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
